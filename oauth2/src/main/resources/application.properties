#H2
spring.datasource.url=jdbc:h2:tcp://localhost/~/test2;
spring.datasource.username=sa
spring.datasource.data-password=
spring.datasource.driver-class-name=org.h2.Driver

#Google
spring.security.oauth2.client.registration.google.client-id=클라이언트 ID 입력
spring.security.oauth2.client.registration.google.client-secret=클라이언트 PW 입력
spring.security.oauth2.client.registration.google.scope=profile,email

## GitHub
spring.security.oauth2.client.registration.github.client-id=222de8a09d7ca4609f11
spring.security.oauth2.client.registration.github.client-secret=8f8fe93178142e15900d5864128557e99cef791c

#Naver는 시큐리티를 지원하지 않기 때문에 수동으로 입력
# registration
spring.security.oauth2.client.registration.naver.client-id= 클라이언트 ID 입력
spring.security.oauth2.client.registration.naver.client-secret=클라이언트 PW 입력
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider -> https://developers.naver.com/apps/#/myapps/eR05U0GAJw6PSXCVMKSs/overview
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#JPA
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true

